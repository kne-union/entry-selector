{"version":3,"file":"static/js/147.b7296406.chunk.js","mappings":"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","sources":["../../src/index.js","../../src/locale/zh-CN.js","../../src/locale/en-US.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport zhCn from './locale/zh-CN';\nimport enUS from './locale/en-US';\nimport { ReactSortable } from 'react-sortablejs';\nimport { createWithIntlProvider, useIntl } from '@kne/react-intl';\nimport { MoreOutlined, HolderOutlined } from '@ant-design/icons';\nimport ButtonGroup from '@kne/button-group';\nimport useControllerValue from '@kne/use-control-value';\nimport { FetchScrollLoader } from '@kne/scroll-loader';\nimport classnames from 'classnames';\nimport SearchInput from '@kne/search-input';\nimport { Flex, Button, Row, Col, List, Empty, Checkbox } from 'antd';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport '@kne/button-group/dist/index.css';\nimport style from './style.module.scss';\n\nconst EntrySelector = createWithIntlProvider({\n  defaultLocale: 'zh-CN',\n  messages: {\n    'zh-CN': zhCn,\n    'en-US': enUS\n  },\n  namespace: 'entry-selector'\n})(({ onAdd, api, options, renderSelectedItem, renderItem, renderOptions, getSearchProps, searchPlaceholder, ...props }) => {\n  const [value, onChange] = useControllerValue(props);\n  const [searchProps, setSearchProps] = useState({});\n  const { formatMessage } = useIntl();\n  const ref = useRef(null);\n  return (\n    <Flex vertical gap={8} className={style['entry-selector']}>\n      {typeof onAdd === 'function' && (\n        <Flex>\n          <Button\n            shape=\"round\"\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              onAdd({ fetchApi: ref.current, value, onChange });\n            }}\n          >\n            {formatMessage({ id: 'add' })}\n          </Button>\n        </Flex>\n      )}\n      <FetchScrollLoader\n        {...props}\n        completeTips={null}\n        searchProps={searchProps}\n        getSearchProps={getSearchProps}\n        api={api}\n        ref={ref}\n        className={style['list-scroll']}\n        autoHide={false}\n        render={({ fetchApi, children }) => {\n          const { data } = fetchApi;\n          const { pageData, totalCount } = Object.assign(\n            {},\n            {\n              pageData: [],\n              totalCount: 0\n            },\n            data\n          );\n          const listMapping = new Map(pageData.map(item => [item.id, item]));\n          const currentList = (value || []).map(({ id }) => listMapping.get(id)).filter(item => !!item);\n          return (\n            <Row gutter={[12, 12]}>\n              <Col span={totalCount > 0 ? 12 : 24}>\n                <div className={style['list-outer']}>\n                  {totalCount > 0 && <div className={style['list-header']}>{formatMessage({ id: 'selected' })}</div>}\n                  <SimpleBar className={style['list-scroll']} autoHide={false}>\n                    {value && value.length > 0 ? (\n                      <List className={style['list']} size=\"small\">\n                        <ReactSortable\n                          filter=\".ignore-elements\"\n                          dragClass={style['sortable-drag']}\n                          ghostClass={style['sortable-ghost']}\n                          forceFallback\n                          animation={300}\n                          delayOnTouchStart\n                          delay={2}\n                          list={currentList}\n                          setList={list => {\n                            onChange(value => {\n                              const mapping = new Map((value || []).map(item => [item.id, item]));\n                              return list.map(({ id }) => {\n                                return mapping.get(id);\n                              });\n                            });\n                          }}\n                        >\n                          {(value || [])\n                            .map(({ id }) => listMapping.get(id))\n                            .filter(item => !!item)\n                            .map((item, index) => {\n                              const defaultItem = <span className={'list-item-title'}>{item.title}</span>;\n                              const mapping = new Map((value || []).map(item => [item.id, item]));\n                              return (\n                                <List.Item key={item.id} className={classnames(style['columns-control-content-item'], style['is-drag'])}>\n                                  <HolderOutlined className={style['columns-control-content-item-icon']} />\n                                  <div className={style['list-index']}>{index + 1}</div>\n                                  <Flex vertical flex={1}>\n                                    {typeof renderSelectedItem === 'function'\n                                      ? renderSelectedItem(mapping.get(item.id), {\n                                          el: defaultItem,\n                                          target: item,\n                                          fetchApi,\n                                          onChange: item => {\n                                            return onChange(value => {\n                                              const newValue = (value || []).slice(0);\n                                              const index = newValue.findIndex(({ id }) => id === item.id);\n                                              const currentItem = newValue[index];\n                                              if (index > -1) {\n                                                newValue.splice(index, 1, Object.assign({}, typeof item === 'function' ? item(currentItem) : item));\n                                              }\n                                              return newValue;\n                                            });\n                                          }\n                                        })\n                                      : defaultItem}\n                                  </Flex>\n                                </List.Item>\n                              );\n                            })}\n                        </ReactSortable>\n                      </List>\n                    ) : (\n                      <Flex className={style['list']} justify=\"center\" align=\"center\">\n                        <Empty />\n                      </Flex>\n                    )}\n                  </SimpleBar>\n                </div>\n              </Col>\n              {totalCount > 0 && (\n                <Col span={12}>\n                  <div className={style['list-outer']}>\n                    <Flex className={style['list-header']} justify=\"space-between\">\n                      <div className={style['list-header-title']}>{formatMessage({ id: 'list' })}</div>\n                      <div>\n                        {typeof getSearchProps === 'function' && (\n                          <SearchInput\n                            size=\"small\"\n                            placeholder={searchPlaceholder || formatMessage({ id: 'searchPlaceholder' })}\n                            value={searchProps.searchText}\n                            onSearch={value => {\n                              setSearchProps(searchProps => Object.assign({}, searchProps, { searchText: value }));\n                            }}\n                          />\n                        )}\n                      </div>\n                    </Flex>\n                    {children}\n                  </div>\n                </Col>\n              )}\n            </Row>\n          );\n        }}\n      >\n        {({ fetchApi, list }) => {\n          const targetOptions = typeof renderOptions === 'function' ? renderOptions({ fetchApi, options }) : options;\n          return (\n            <List\n              className={classnames(style['list'], style['list-lib'])}\n              size=\"small\"\n              dataSource={list}\n              renderItem={item => {\n                const defaultItem = <span className={'list-item-title'}>{item.title}</span>;\n                return (\n                  <List.Item\n                    key={item.id}\n                    onClick={() => {\n                      onChange(value => {\n                        const newValue = (value || []).slice(0);\n                        const index = newValue.findIndex(({ id }) => id === item.id);\n                        if (index > -1) {\n                          newValue.splice(index, 1);\n                        } else {\n                          newValue.push({ id: item.id });\n                        }\n\n                        return newValue;\n                      });\n                    }}\n                  >\n                    <Checkbox checked={(value || []).findIndex(({ id }) => id === item.id) > -1} />\n                    <Flex vertical flex={1}>\n                      {typeof renderItem === 'function'\n                        ? renderItem(item, {\n                            fetchApi,\n                            el: defaultItem\n                          })\n                        : defaultItem}\n                    </Flex>\n                    {targetOptions && (\n                      <Flex\n                        flex={'0 0 50px'}\n                        onClick={e => {\n                          e.stopPropagation();\n                        }}\n                      >\n                        <ButtonGroup more={<Button type=\"link\" icon={<MoreOutlined />} />} list={targetOptions} />\n                      </Flex>\n                    )}\n                  </List.Item>\n                );\n              }}\n            />\n          );\n        }}\n      </FetchScrollLoader>\n    </Flex>\n  );\n});\n\nexport default EntrySelector;\n","const locale = {\n  add: '添加',\n  selected: '已选择',\n  list: '列表',\n  searchPlaceholder: '请输入关键字'\n};\n\nexport default locale;\n","const locale = {\n  add: 'Add',\n  selected: 'Selected',\n  list: 'List',\n  searchPlaceholder: 'Please input keyword'\n};\n\nexport default locale;\n"],"names":["EntrySelector","createWithIntlProvider","defaultLocale","messages","add","selected","list","searchPlaceholder","namespace","_ref","onAdd","api","options","renderSelectedItem","renderItem","renderOptions","getSearchProps","props","_objectWithoutPropertiesLoose","_excluded","value","onChange","useControllerValue","searchProps","setSearchProps","useState","formatMessage","useIntl","ref","useRef","React","Flex","vertical","gap","className","style","Button","shape","size","type","onClick","fetchApi","current","id","FetchScrollLoader","_extends","completeTips","autoHide","render","_ref2","children","data","pageData","totalCount","Object","assign","listMapping","Map","map","item","currentList","_ref3","get","filter","Row","gutter","Col","span","SimpleBar","length","List","ReactSortable","dragClass","ghostClass","forceFallback","animation","delayOnTouchStart","delay","setList","mapping","_ref4","_ref5","index","defaultItem","title","Item","key","classnames","HolderOutlined","flex","el","target","newValue","slice","findIndex","_ref6","currentItem","splice","justify","align","Empty","SearchInput","placeholder","searchText","onSearch","_ref7","targetOptions","dataSource","_ref8","push","Checkbox","checked","_ref9","e","stopPropagation","ButtonGroup","more","icon","MoreOutlined"],"sourceRoot":""}